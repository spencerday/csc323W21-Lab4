Preliminary idea for structure of a "transaction block" that can support multiple
inputs, outputs, and signatures for the 3 different types of transactions
(transfer, merge, join)


{
    "number" : transaction identififer,
    "type" : transfer, merge, or join,
    "input" : [
        {
            value : (publickey.n, publickey.e)
        },
        ...
        {
            value: public key
        }
    ],
    "output" : [
        {
            "keycoin" : key
        },
        ...
        {
            "keycoin" : key
        }
    ],
    "signature" : [
        {
            "signature" : value
        },
        ...

        {
            "signature" : value
        }
    ],
    "hashpointer" : { prior transaction object }
    "nonce" : value,
    "proof" : sha256 hash value
}


transaction defintion that is used in the transaction file

{
    "type" : transfer, merge, or join,
    "input" : [
        transaction number,
        ...
        transaction number
    ],
    "output" : [
        {
            value : (publickey.n, publickey.e)
        },
        ...
        {
            value : (publickey.n, publickey.e),
        }
    ],
    "signature" : [
        signature of type,
        signature of input,
        signature of output
    ],
    "number" : transaction identififer
}
